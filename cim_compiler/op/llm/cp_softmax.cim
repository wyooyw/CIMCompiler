def cp_online_softmax(
    x< <-1>, fp16, __OUTPUT_MEMORY__>,
    score< <-1>, fp16, __OUTPUT_MEMORY__>
    ) {
    // local softmax
    max_x = Buffer(<1>, fp16, __OUTPUT_MEMORY__);
    sum_exp_x = Buffer(<1>, fp16, __OUTPUT_MEMORY__);
    softmax(x, score, max_x, sum_exp_x);

    // all-gather sum_exp_x and max_x
    all_sum_exp_x = Buffer(<{{world_size}}, 1>, fp16, __OUTPUT_MEMORY__);
    all_max_x = Buffer(<{{world_size}}, 1>, fp16, __OUTPUT_MEMORY__);
    Trans(sum_exp_x, all_sum_exp_x[{{core_id}}, 0]);
    all_gather(all_sum_exp_x);
    Trans(max_x, all_max_x[{{core_id}}, 0]);
    all_gather(all_max_x);

    total_max_x = Buffer(<1>, fp16, __OUTPUT_MEMORY__);
    SIMD(REDUCE_MAX, all_max_x, total_max_x);

    all_max_x_sub_total_max_x = Buffer(<{{world_size}}, 1>, fp16, __OUTPUT_MEMORY__);
    SIMD(VS_SUB, all_max_x, total_max_x, all_max_x_sub_total_max_x);
    factors = Buffer(<{{world_size}}, 1>, fp16, __OUTPUT_MEMORY__);
    SIMD(V_EXP, all_max_x_sub_total_max_x, factors);

    SIMD(VVMUL, factors, all_sum_exp_x, all_sum_exp_x);
    final_denominator = Buffer(<1>, fp16, __OUTPUT_MEMORY__);
    SIMD(REDUCE_SUM, all_sum_exp_x, final_denominator);

    final_factor = Buffer(<1>, fp16, __OUTPUT_MEMORY__);
    SIMD(VS_DIV, all_sum_exp_x[{{core_id}}, 0], final_denominator, final_factor);
    SIMD(VSMUL, score, final_factor, score);
}